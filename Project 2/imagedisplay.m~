 clear all;

 Screen('Preference', 'SkipSyncTests', 1);

 [window,rect] = Screen('OpenWindow', 0);

 Screen('BlendFunction', window, GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
 
 HideCursor();
 
 mask = imread('black_new.png');
 
 mask = 255 - mask(:,:,1);
 
 for i = 1:147

     
    if i >= 10
     TRIANGLE = imread([num2str(i) '.png']);
    end
    if i < 10
     TRIANGLE = imread([num2str(0) num2str(i) '.png'] );
    end

     C = imresize(TRIANGLE, [275 275]);
     mask = imresize(mask, [275 275]);

     C(:,:,4) = mask;

     TextureVector(i) = Screen('MakeTexture', window, uint8(C));
    

 end
 %variables that can be changed
x_center = rect(3)/2;
y_center = rect(4)/2;
image_width = 275;
image_height = 275;
average = randi(147);
%distance between the centers of the images
radiusofimages = 300;
% array of degrees from 0 to 300 incrementing by 60 degs each time.
degrees = [0:60:300];

%draws the circle in the middle
   
% getMouse
%    [x_center - image_width/2,y_center - image_height/2,buttons,focus,valuators,valinfo] = GetMouse([windowPtrOrScreenNumber][, mouseDev])
%    [clicks,x,y,whichButton] = GetClicks([windowPtrOrScreenNumber][, interclickSecs][, mouseDev])
   
   [x,y,buttons] = GetMouse;
   
%  while any(buttons) % if already down, wait for release
%        [x,y,buttons] = GetMouse;
%  end
%  while ~any(buttons) % wait for press
%        [x,y,buttons] = GetMouse;
%  end
%  while any(buttons) % wait for release
%        [x,y,buttons] = GetMouse;
%  end
random_starter = randi(147);
starting_x = x;
 while ~any(buttons)
     % draws the six circles
 for i = 1:6
    Screen('DrawTexture', window, TextureVector(1), [], ...
        [x_center + radiusofimages * cosd(degrees(i)) - image_width/2, y_center - radiusofimages * sind(degrees(i)) - image_height/2, ...
        x_center + radiusofimages * cosd(degrees(i)) + image_width/2, y_center - radiusofimages * sind(degrees(i)) + image_height/2]);
 end
 
     [x,y,buttons] = GetMouse;
     index = floor(abs(mod(random_starter + x - starting_x, 147)) + 1);
      Screen('DrawTexture', window, TextureVector(index), [], ... 
       [ x_center - image_width/2, y_center - image_height/2, x_center + image_width/2, y_center + image_height/2]);
   Screen('Flip', window);
 end
 diff = average - index;
 
 
  Screen('CloseAll');
 

   
   
   
   
   
